/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRadarEditions,
  IRadarEditionsInterface,
} from "../../src/IRadarEditions";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_futureFundFee",
        type: "uint256",
      },
    ],
    name: "setFutureFundFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumEditionFee",
        type: "uint256",
      },
    ],
    name: "setMaximumEditionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRadarEditions__factory {
  static readonly abi = _abi;
  static createInterface(): IRadarEditionsInterface {
    return new Interface(_abi) as IRadarEditionsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRadarEditions {
    return new Contract(address, _abi, runner) as unknown as IRadarEditions;
  }
}
