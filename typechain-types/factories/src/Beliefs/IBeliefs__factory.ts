/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBeliefs,
  IBeliefsInterface,
} from "../../../src/Beliefs/IBeliefs";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "believer",
        type: "address",
      },
    ],
    name: "EditionBeliefRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "believer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tags",
        type: "string",
      },
    ],
    name: "EditionBelieved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tags",
        type: "string",
      },
    ],
    name: "believeProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "editionId",
        type: "uint256",
      },
    ],
    name: "removeBelief",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBeliefs__factory {
  static readonly abi = _abi;
  static createInterface(): IBeliefsInterface {
    return new Interface(_abi) as IBeliefsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IBeliefs {
    return new Contract(address, _abi, runner) as unknown as IBeliefs;
  }
}
